<launch>
  <!-- Launch an example that sends commands via C++ API. -->

  <arg name="camera_frame_name" default="ee_link" />
  <arg name="gravity_frame_name" default="base_link" />
  <arg name="target_frame_name" default="demo_frame" />
  <arg name="loop_rate" default="50" /> <!-- hz -->
  <arg name="rotational_tolerance" default="0.05" /> <!-- radians -->

  <arg name="look_at_pose_server_name" default="/look_at_pose" />
  <arg name="target_pose_publish_topic" default="target_pose" />

  <node name="servo_startup_services" pkg="ee_focus" type="servo_starter.sh"/>

  <!-- NODE TO CALCULATE TARGET POSE IN CAMERA FRAME -->
  <node name="look_at_pose_server" pkg="look_at_pose" type="look_at_pose_server"/>

  <!-- NODE CONTAINING SERVO AND THE CAMERA POINTER COMMAND -->
  <node name="ee_focus" pkg="ee_focus" type="camera_pointer" output="screen">
    <rosparam command="load" file="$(find ee_focus)/config/ur_simulated_config.yaml" />
    <rosparam command="load" file="$(find ee_focus)/config/pose_tracking_settings.yaml" />

    <param name="camera_frame_name" type="str" value="$(arg camera_frame_name)" />
    <param name="gravity_frame_name" type="str" value="$(arg gravity_frame_name)" />
    <param name="target_frame_name" type="str" value="$(arg target_frame_name)" />
    <param name="loop_rate" type="double" value="$(arg loop_rate)" />
    <param name="rotational_tolerance" type="double" value="$(arg rotational_tolerance)" />
    <param name="look_at_pose_server_name" type="str" value="$(arg look_at_pose_server_name)" />
    <param name="target_pose_publish_topic" type="str" value="$(arg target_pose_publish_topic)" />
  </node>

</launch>
